/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '2.0.16'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation 'org.apache.kafka:kafka-clients:3.8.0'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.8.0'

    implementation 'com.google.code.gson:gson:2.11.0'

    // https://mvnrepository.com/artifact/io.javalin/javalin
   // implementation group: 'io.javalin', name: 'javalin', version: '6.3.0'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
   // implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
   // implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'

   // https://mvnrepository.com/artifact/io.prometheus/prometheus-metrics-core
    implementation 'io.prometheus:prometheus-metrics-core:1.3.5'

    // https://mvnrepository.com/artifact/io.prometheus/prometheus-metrics-exporter-httpserver
    implementation 'io.prometheus:prometheus-metrics-exporter-httpserver:1.3.5'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams-test-utils
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.9.0'

    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation 'org.assertj:assertj-core:3.27.3'

    // https://mvnrepository.com/artifact/org.json/json
    testImplementation  'org.json:json:20250107'



  
}
jar {
    manifest {
        attributes 'Main-Class': 'streamProcessor.UAAPP'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
   duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
test {
    useJUnitPlatform()
}
application {
    // Define the main class for the application.
    mainClass = 'streamProcessor.UAAPP'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
